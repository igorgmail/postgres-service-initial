version: '3.8'
services:

  postgres:
    container_name: gy_db_postgres
    image: postgres:15.7-alpine3.19
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    ports:
      - '5434:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend
    restart: always
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  app:
    container_name: gy_service
    build:
      context: .
    volumes:
      - .:/usr/src/app
    ports:
      - "3001:3000"
    depends_on:
      - postgres
    environment:
      NODE_ENV: production
      PROD_DB_URL: ${PROD_DB_URL}
    networks:
      - backend
    restart: always
    command: npm start

  db-setup:
    container_name: gy_db_setup
    build:
      context: .
    volumes:
      - .:/usr/src/app
    depends_on:
      - postgres
    environment:
      NODE_ENV: production
      PROD_DB_URL: ${PROD_DB_URL}
    networks:
      - backend
    entrypoint: |
      sh -c "
      until npx sequelize db:drop && npx sequelize db:create; do
        echo 'Ожидание базы данных...'
        sleep 2
      done &&
      npx sequelize db:migrate &&
      npx sequelize db:seed:all"
    restart: "no"  # Не перезапускается после завершения
    profiles:
      - setup # Назначаем профиль для запуска вручную

networks:
  backend:
    driver: bridge

volumes:
  pgdata:
    driver: local
